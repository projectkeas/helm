{{- $apiToken := (randAlphaNum 45) | b64enc | quote }}
{{- $natsToken := (randAlphaNum 45) }}
{{- $natsAuthToken := $natsToken | quote }}
{{- $natsAuthTokenEnc := $natsToken | b64enc | quote }}
{{- if .Values.configuration.createSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: ingestion-secret
  labels: 
    "helm.sh/resource-policy": "keep"
    {{- include "helmchart.labels" . | nindent 4 }}
type: Opaque
data:
  ingestion.auth.token: {{ $apiToken }}
  nats.token: {{ $natsAuthTokenEnc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: ingestion-nats-config
  labels: 
    "helm.sh/resource-policy": "keep"
    {{- include "helmchart.labels" . | nindent 4 }}
type: Opaque
stringData:
  nats.conf: |
    port: 4222
    pid_file: "/var/run/nats/nats.pid"
    http: 8222
    server_name:$POD_NAME
    jetstream {
      max_mem: 1Gi
      store_dir: /data
      max_file:10Gi
    }
    cluster {
      port: 6222
      name: nats
      routes = [
        {{- $count := (.Values.nats.cluster.replicas | int) }}
        {{- $name := include "helmchart.fullname" . }}
        {{- $ns := .Release.Namespace }}
        {{- range untilStep 0 $count 1 }}
        nats://{{ $name }}-nats-{{.}}.{{ $name }}-nats.{{ $ns }}.svc.cluster.local:6222,
        {{- end }}
      ]
      cluster_advertise: $CLUSTER_ADVERTISE
      no_advertise: true

      connect_retries: 120
    }
    lame_duck_grace_period: 10s
    lame_duck_duration: 30s
    authorization: {
        token: {{ $natsAuthToken }}
    }
{{- end }}